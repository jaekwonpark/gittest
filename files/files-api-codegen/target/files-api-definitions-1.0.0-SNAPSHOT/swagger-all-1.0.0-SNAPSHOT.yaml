openapi: 3.0.1
info:
  title: This is the files AP definitions
  version: 1.0.0-SNAPSHOT
paths:
  /common/unversioned.a1/api.info/namespaces:
    get:
      tags:
      - Namespace
      description: Returns a list of all namespaces in the API platform
      operationId: getAllNamespaces
      responses:
        200:
          description: Successfully returns all the namespaces1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.v5.r0.a1.response.NamespaceListApiResponse'
      x-oam-apioperation-package: common.unversioned.a1.api.info
      x-oam-apioperation-tag: __common_unversioned_a1_api_info__Namespace
    x-api-namespace: common
    x-api-namespace-version: unversioned.a1
    x-api-namespace-module: api.info
  /common/unversioned.a1/api.info/namespaces/{id}:
    delete:
      tags:
      - Namespace
      description: Delete a single namespace identified by {id}
      operationId: getNamespaceById
      parameters:
      - name: id
        in: path
        description: The uuid of the namespaces
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Returned if deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.v5.r0.a1.response.NamespaceApiResponse'
      x-oam-apioperation-package: common.unversioned.a1.api.info
      x-oam-apioperation-tag: __common_unversioned_a1_api_info__Namespace
    x-api-namespace: common
    x-api-namespace-version: unversioned.a1
    x-api-namespace-module: api.info
  /files/v4.r0.a1/file_servers/file_servers:
    get:
      tags:
      - Files
      description: 'Returns a list of all file servers '
      operationId: getAllFileServers
      parameters:
      - name: uuid
        in: path
        description: The uuid of the File Server
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: $sort
        in: query
        description: |
          The sort criteria used to order the results.  Multiple values can be specified as a pipe-separated list. Must map to a list of field names defined in the DTO.  Unknown fields are ignored.  Defaults to sort by name if this query parameter is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: $page
        in: query
        description: |
          The start index of the records to return.  Defaults to 0
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: $limit
        in: query
        description: |
          The number of records to return.  Defaults to 100, max of 500
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successfully returns all the File Servers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.v5.r0.a1.response.FileServerListApiResponse'
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    put:
      tags:
      - Files
      description: Update file servers
      operationId: updateFileServers
      parameters: []
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    post:
      tags:
      - Files
      description: Create file servers
      operationId: createFileServers
      parameters: []
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    x-api-namespace: files
    x-api-namespace-version: v4.r0.a1
    x-api-namespace-module: file_servers
  /files/v4.r0.a1/file_servers/file_servers/{file_server_uuid}:
    get:
      tags:
      - Files
      description: Returns details for a single file server identified by {id}
      operationId: getFileServerByUuid
      parameters:
      - name: file_server_uuid
        in: path
        description: The uuid of the file server
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Returned if the Mount details were successfully fetched and
            returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.v5.r0.a1.response.FileServerApiResponse'
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    delete:
      tags:
      - Files
      description: Delete file server entity.
      operationId: deleteFileServer
      parameters:
      - name: file_server_uuid
        in: path
        description: The uuid of the File server uuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Successfully deleted the entities.
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    x-api-namespace: files
    x-api-namespace-version: v4.r0.a1
    x-api-namespace-module: file_servers
  /files/v4.r0.a1/file_servers/{uuid}/mount_targets:
    get:
      tags:
      - Files
      description: 'Returns a list of all mount targets '
      operationId: getAllMountTargets
      parameters:
      - name: uuid
        in: path
        description: The uuid of the File Server
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: $sort
        in: query
        description: |
          The sort criteria used to order the results.  Multiple values can be specified as a pipe-separated list. Must map to a list of field names defined in the DTO.  Unknown fields are ignored.  Defaults to sort by name if this query parameter is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: $page
        in: query
        description: |
          The start index of the records to return.  Defaults to 0
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: $limit
        in: query
        description: |
          The number of records to return.  Defaults to 100, max of 500
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successfully returns all the Mount Targets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.v5.r0.a1.response.MountTargetListApiResponse'
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    put:
      tags:
      - Files
      description: Update mount targets
      operationId: updateMountTargets
      parameters:
      - name: uuid
        in: path
        description: The uuid of the File Server
        required: true
        style: simple
        explode: false
        schema:
          type: string
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    post:
      tags:
      - Files
      description: Create mount targets
      operationId: createMountTargets
      parameters:
      - name: uuid
        in: path
        description: The uuid of the File Server
        required: true
        style: simple
        explode: false
        schema:
          type: string
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    x-api-namespace: files
    x-api-namespace-version: v4.r0.a1
    x-api-namespace-module: file_servers
  /files/v4.r0.a1/file_servers/{uuid}/mount_targets/{mount_target_uuid}:
    get:
      tags:
      - Files
      description: Returns details for a single mount_target identified by {id}
      operationId: getMountTargetByUuid
      parameters:
      - name: uuid
        in: path
        description: The uuid of the File Server
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mount_target_uuid
        in: path
        description: The uuid of the Mount Target
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Returned if the Mount details were successfully fetched and
            returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.v5.r0.a1.response.MountTargetApiResponse'
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    delete:
      tags:
      - Files
      description: Delete mount_target entity.
      operationId: deleteMountTarget
      parameters:
      - name: uuid
        in: path
        description: The uuid of the File Server
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mount_target_uuid
        in: path
        description: The uuid of the Mount Target
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Successfully deleted the entities.
      x-oam-apioperation-package: files.v4.r0.a1.file_servers
      x-oam-apioperation-tag: __files_v4_r0_a1_file_servers__Files
    x-api-namespace: files
    x-api-namespace-version: v4.r0.a1
    x-api-namespace-module: file_servers
components:
  schemas:
    common.unversioned.a1.api.info.Namespace:
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.CategoryAwareModel'
      - type: object
        properties:
          name:
            type: string
            description: The name of this namespace
          version:
            type: string
            description: The string representation of the version this namespace belongs
              to
          endpoints:
            type: array
            description: The fully qualified endpoints defined in this (namespace,
              version, revision)
            items:
              type: string
          models:
            type: array
            description: The fully qualified model names defined in this (namespace,
              version, revision)
            items:
              type: string
          modelDependencies:
            type: array
            description: The other model endpoints that APIs in this (namespace, version,
              revision) depend on
            items:
              type: string
          versionType:
            $ref: '#/components/schemas/common.unversioned.a1.api.info.VersionType'
    common.unversioned.a1.api.info.VersionType:
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - ALPHA
        - BETA
        - RELEASED
    common.unversioned.a1.data.types.AbstractModel:
      type: object
      properties:
        objectType:
          type: string
          description: A fully qualified name of the object represented by this entity
          readOnly: true
        tenantId:
          type: string
          description: |
            The tenant to which this object instance belongs.  Every Nutanix object belongs to a tenant. Once an object is created its tenancy cannot be changed.
          readOnly: true
    common.unversioned.a1.data.types.MetadataAbstractModel:
      description: |
        An abstract representation of an object that is itself not consumable via an external API endpoint but provides metadata information in the form of HATEOAS links to the consumer.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          links:
            type: array
            description: The HATEOAS links for the Vm API.  Minimally contains the
              self link
            items:
              $ref: '#/components/schemas/common.v5.r0.a1.response.types.ApiLink'
    common.unversioned.a1.data.types.ExternalizableAbstractModel:
      description: |
        An abstract representation of an object that is externally consumable via an API endpoint.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.MetadataAbstractModel'
      - type: object
        properties:
          extId:
            type: string
            description: An identifier for the object that is suitable for external
              consumption.
          name:
            type: string
            description: |
              The tenant to which this object instance belongs.  Every Nutanix object belongs to a tenant. Once an object is created its tenancy cannot be changed.
          description:
            type: string
            description: |
              The tenant to which this object instance belongs.  Every Nutanix object belongs to a tenant. Once an object is created its tenancy cannot be changed.
          displayName:
            type: string
    common.unversioned.a1.data.types.CategoryAwareModel:
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.ExternalizableAbstractModel'
      - type: object
        properties:
          categories:
            type: array
            description: An identifier for the object that is suitable for external
              consumption.
            items:
              $ref: '#/components/schemas/common.unversioned.a1.data.types.Category'
    common.unversioned.a1.data.types.BaseEnum:
      type: string
      enum:
      - $UNKNOWN
    common.unversioned.a1.data.types.Category:
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            type: string
            description: The name of this category
    common.v5.r0.a1.response.types.ApiResponseMetadata:
      description: Metadata associated with API responses
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.MetadataAbstractModel'
      - type: object
        properties:
          totalCount:
            type: integer
            description: Represents the total count of the results available for this
              entity (if applicable).
            format: int64
    common.v5.r0.a1.response.types.ApiLink:
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          href:
            type: string
            description: The URL that points to the relationship
          rel:
            type: string
            description: The name of the relationship
        description: HATEOAS links for the request.  For paginated requests includes
          prev/next/first and last links
    files.v4.r0.a1.file_servers.FileServer:
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.ExternalizableAbstractModel'
      - type: object
        properties:
          config:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.FileServerConfig'
    files.v4.r0.a1.file_servers.Network:
      title: FileServer Config.
      description: FileServer config.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          uuid:
            type: string
            description: Uuid of the network.
          name:
            type: string
            description: Name of the network.
          networkAddress:
            type: string
            description: NetworkAddress of the network.
          internalVirtualNetworkUuid:
            type: string
            description: Uuid of the internal network.
          externalVirtualNetworkUuid:
            type: string
            description: Uuid of the external network.
          isInternalNetwork:
            type: boolean
            description: Uuid of the external network.
          subnetMask:
            type: string
            description: Subnetmask of the network.
          defaultGateway:
            type: string
            description: Default Gateway of the network.
    files.v4.r0.a1.file_servers.FileServerConfig:
      title: FileServer Config.
      description: FileServer config.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          uuid:
            type: string
            description: Uuid of the file server.
          name:
            type: string
            description: Name of the file server.
          description:
            type: string
            description: Description of the file server.
          dnsDomainNme:
            type: string
            description: Dns domain name of the file server.
          continerUuid:
            type: string
            description: Container uuid associated with file server.
          dnsServerIpAddresses:
            type: array
            description: Dns server ip addresses.
            items:
              type: string
          ntpServers:
            type: array
            description: ntp server ip addresses.
            items:
              type: string
          internalVirtualNetworkUuid:
            type: string
            description: ntp server ip addresses.
          externalVirtualNetworkUuids:
            type: array
            description: External network uuids.
            items:
              type: string
          internalNetwork:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.Network'
          externalNetworks:
            type: array
            items:
              $ref: '#/components/schemas/files.v4.r0.a1.file_servers.Network'
          numShares:
            type: integer
            description: Num of shares associated with the file server
            format: int32
          numHomeShares:
            type: integer
            description: Num of home shares associated with file server.
            format: int32
          numNestedShares:
            type: integer
            description: Num of nested shares associated with file server.
            format: int32
          externalIpAddresses:
            type: array
            description: External ip addresses
            items:
              type: string
          version:
            type: string
            description: version of file server
          upgrdeInProgress:
            type: boolean
            description: Upgrade in progress flag
          protectedDomainState:
            type: boolean
            description: Protection domain Status
          pdStatus:
            type: boolean
            description: Pd Status
          protectionDomainName:
            type: string
            description: protectionDomainName
    files.v4.r0.a1.file_servers.MountTarget:
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.ExternalizableAbstractModel'
      - type: object
        properties:
          config:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.MountTargetConfig'
    files.v4.r0.a1.file_servers.MountTargetConfig:
      title: Mount Target Config.
      description: Mount Target config.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          fileServer:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.FileServer'
          version:
            type: string
            description: Version of the Mount Target.
          enableAccessBasedEnumeration:
            type: boolean
            description: Flag to enable Access Based Enumeration.
          maxSizeGib:
            type: integer
            description: Maximum size of Mount Target in GiB.
            format: int64
          mountTargetType:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.MountTargetType'
          nestedPath:
            type: string
            description: Path of the Nested Mount Target.
          protocol:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.Protocol'
          quotaConfigList:
            type: array
            items:
              $ref: '#/components/schemas/files.v4.r0.a1.file_servers.QuotaConfig'
          virusScanPolicyConfigList:
            type: array
            items:
              $ref: '#/components/schemas/files.v4.r0.a1.file_servers.VirusScanPolicyConfig'
          snapshotConfigList:
            type: array
            items:
              $ref: '#/components/schemas/files.v4.r0.a1.file_servers.SnapshotConfig'
    files.v4.r0.a1.file_servers.Protocol:
      title: Protocol of Mount Target.
      properties:
        protocolTypeList:
          type: array
          items:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.ProtocolType'
        protocolConfig:
          $ref: '#/components/schemas/files.v4.r0.a1.file_servers.ProtocolConfig'
      description: Protocol of Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
    files.v4.r0.a1.file_servers.SnapshotConfig:
      title: Snapshot Config
      description: Snapshot Config
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.ExternalizableAbstractModel'
      - type: object
        properties:
          fileServer:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.FileServer'
          id:
            type: string
            description: snapshot id
          createTime:
            type: integer
            description: Snapshot create time.
            format: int32
          totalSpaceBytes:
            type: integer
            format: int32
          reclaimableSpaceBytes:
            type: integer
            description: Reclaimable space in Bytes.
            format: int32
          snapshotCreator:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.SnapshotCreator'
    files.v4.r0.a1.file_servers.QuotaConfig:
      title: Protocol of Mount Target.
      description: Protocol of Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.ExternalizableAbstractModel'
      - type: object
        properties:
          sizeGib:
            type: integer
            description: Maximum size of quota.
            format: int32
          userOrGroupAccount:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.UserOrGroupAccount'
          enforcementType:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.EnforcementType'
          enableNotification:
            type: boolean
            description: Enable notification for user or group.
          recipientList:
            type: array
            description: Email recipient list to user or group.
            items:
              type: string
              description: Recipient list.
    files.v4.r0.a1.file_servers.VirusScanPolicyConfig:
      title: Mount Target Protocol Config.
      description: Mount Target Protocol Config.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.ExternalizableAbstractModel'
      - type: object
        properties:
          scanTimeoutIntervalInSecs:
            type: integer
            description: Scan timeout interval.
            format: int32
          enableScanOnWrite:
            type: boolean
            description: Enable scan on write.
          enableScanOnRead:
            type: boolean
            description: Enable scan on read.
          fileSizeExclusion:
            type: integer
            description: File size exclusion.
            format: int32
          enableBlockAccessFile:
            type: boolean
            description: Enable block access file
          enableAntivirus:
            type: boolean
            description: Enable anti virus.
          fileTypeExclusionList:
            type: array
            items:
              type: string
              description: File type exclusion.
    files.v4.r0.a1.file_servers.ProtocolConfig:
      title: Mount Target Protocol Config.
      description: Mount Target Protocol Config.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          smbProtocolConfig:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.SmbProtocolConfig'
          nfsProtocolConfig:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.NfsProtocolConfig'
          nonNativeProtocolConfig:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.NonNativeProtocolConfig'
    files.v4.r0.a1.file_servers.SmbProtocolConfig:
      title: SMB protocol config.
      description: SMB Properties of Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          enablePreviousVersion:
            type: boolean
            description: Flag to enable windows previous version.
    files.v4.r0.a1.file_servers.NonNativeProtocolConfig:
      title: Non native protocol config.
      description: Non native protocol config of Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          enableConcurrentReads:
            type: boolean
            description: Flag to enable concurrent reads.
          enableCasesensitiveNamespace:
            type: boolean
            description: Flag to enable case sensitive name space.
          enableSymlinkCreation:
            type: boolean
            description: Flag to enable symlink creation.
          enableSimulteneousAccess:
            type: boolean
            description: Flag to enable simulteneous access.
    files.v4.r0.a1.file_servers.NfsProtocolConfig:
      title: NFS protocol config.
      description: NFS Properties of mount target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          authenticationType:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.AuthenticationType'
          clientAccessType:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.ClientAccessType'
          squashType:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.SquashType'
          anonymousIdentifier:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.AnonymousIdentifier'
    files.v4.r0.a1.file_servers.ClientAccessType:
      title: Access type of the Mount Target.
      description: Access type of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          defaultAccessType:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.AccessType'
          clientExceptionList:
            type: array
            items:
              $ref: '#/components/schemas/files.v4.r0.a1.file_servers.ClientException'
    files.v4.r0.a1.file_servers.ClientException:
      title: Client Exception Reference
      description: Access exception client list of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          readOnlyAccessList:
            type: string
            description: Readonly client access list.
          readWriteAccessList:
            type: string
            description: Readwrite client access list.
          noAccessList:
            type: string
            description: Noaccess client list.
    files.v4.r0.a1.file_servers.AnonymousIdentifier:
      title: Anonymous Identifier Reference
      description: Anonymous Identifier of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          uid:
            type: string
            description: User Identifier.
          gid:
            type: string
            description: Group Identifier.
    files.v4.r0.a1.file_servers.ProtocolType:
      title: Protocol type of the Mount Target
      description: Protocol type of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - SMB
        - NFS
        - BOTH
    files.v4.r0.a1.file_servers.MountTargetType:
      title: Supported Mount Target Types.
      description: Mount Target type of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - HOMES
        - GENERAL
        - VIRTUAL
    files.v4.r0.a1.file_servers.AuthenticationType:
      title: Authentication type of the Mount Target
      description: Authentication type of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - LOCAL
        - DIRECTORY_SERVICE
    files.v4.r0.a1.file_servers.AccessType:
      title: Access Type of Mount Target
      description: Access type of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - READ_WRITE
        - READ_ONLY
        - NO_ACCESS
    files.v4.r0.a1.file_servers.SquashType:
      title: Squash Type of the Mount Target
      description: Squash type of the Mount Target.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - ROOT_SQUASH
        - ALL_SQUASH
        - NONE
    files.v4.r0.a1.file_servers.EnforcementType:
      title: Enforcement Type
      description: Enforcement Type.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - HARD
        - SOFT
    files.v4.r0.a1.file_servers.AccountType:
      title: Account Type
      description: Account Type.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - USER
        - GROUP
        - UNKNOWN
    files.v4.r0.a1.file_servers.SnapshotCreator:
      title: Snapshot Creator
      description: Snapshot Creator.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.BaseEnum'
      - type: string
        enum:
        - SSR_SNAPSHOT
        - BACKUP_SNAPSHOT
    files.v4.r0.a1.file_servers.UserOrGroupAccount:
      title: User or Group Account
      description: User or Group Account.
      allOf:
      - $ref: '#/components/schemas/common.unversioned.a1.data.types.AbstractModel'
      - type: object
        properties:
          accountType:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.AccountType'
          accountName:
            type: string
            description: Account name.
    common.v5.r0.a1.response.NamespaceListApiResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/common.unversioned.a1.api.info.Namespace'
        metadata:
          $ref: '#/components/schemas/common.v5.r0.a1.response.types.ApiResponseMetadata'
    common.v5.r0.a1.response.NamespaceApiResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/common.unversioned.a1.api.info.Namespace'
        metadata:
          $ref: '#/components/schemas/common.v5.r0.a1.response.types.ApiResponseMetadata'
    common.v5.r0.a1.response.FileServerListApiResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.FileServer'
        metadata:
          $ref: '#/components/schemas/common.v5.r0.a1.response.types.ApiResponseMetadata'
    common.v5.r0.a1.response.FileServerApiResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/files.v4.r0.a1.file_servers.FileServer'
        metadata:
          $ref: '#/components/schemas/common.v5.r0.a1.response.types.ApiResponseMetadata'
    common.v5.r0.a1.response.MountTargetListApiResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/files.v4.r0.a1.file_servers.MountTarget'
        metadata:
          $ref: '#/components/schemas/common.v5.r0.a1.response.types.ApiResponseMetadata'
    common.v5.r0.a1.response.MountTargetApiResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/files.v4.r0.a1.file_servers.MountTarget'
        metadata:
          $ref: '#/components/schemas/common.v5.r0.a1.response.types.ApiResponseMetadata'
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
